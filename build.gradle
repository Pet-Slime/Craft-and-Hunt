buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

import net.minecraftforge.gradle.common.task.SignJar

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}"

// custom properties
ext {

    name = "${mod_name}"
    author = "${mod_author}"
    description = "${mod_description}"
    url = "${mod_url}"
    loader = "${loader_version.replaceAll("\\..*", "")}"
    forge = "${forge_version}"
    mc = "${mc_version}"

}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'snapshot', version: '20200916-1.16.2'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
		
			property 'mixin.env.disableRefMap', 'true'

            mods {
                craftandhunt {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
			
			property 'mixin.env.disableRefMap', 'true'

            mods {
                craftandhunt {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
			
			property 'mixin.env.disableRefMap', 'true'

            args '--mod', 'craftandhunt', '--all', '--output', file('src/main/resources/')

            mods {
                craftandhunt {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven { url 'https://maven.blamejared.com' }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.3-34.1.4'

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16-42:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16-42")

}

processResources {

    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_id", project.archivesBaseName
    inputs.property "mod_name", project.ext.name
    inputs.property "mod_version", project.version
    inputs.property "mod_url", project.ext.url
    inputs.property "mod_description", project.ext.description
    inputs.property "mod_author", project.ext.author
    inputs.property "loader_version", project.ext.loader
    inputs.property "forge_version", project.ext.forge
    inputs.property "mc_version", project.ext.mc

    // replace stuff in mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        include 'META-INF/mods.toml', 'pack.mcmeta'

        expand (

                'mod_id': project.archivesBaseName,
                'mod_name': project.ext.name,
                'mod_version': project.version,
                'mod_url': project.ext.url,
                'mod_description': project.ext.description,
                'mod_author': project.ext.author,
                'loader_version': project.ext.loader,
                'forge_version': project.ext.forge,
                'mc_version': project.ext.mc

        )

    }

    // copy everything else except mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        exclude 'META-INF/mods.toml', 'pack.mcmeta'

    }

}



jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Version": "1.0", // We are version 1.0 of ourselves
                "Specification-Vendor": project.ext.author.toLowerCase(),
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" : project.ext.author.toLowerCase(),
                "Implementation-Vendor-Id" : project.group,
                "Implementation-URL" : project.ext.url,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
	
    archiveName "${project.ext.name.replaceAll("\\s", "")}-v${mod_version}-${mc_version}.jar" // use archiveFileName in the future
}


// seems to work ok for now, but Forge currently doesn't use the key anyways
task signJar(type: SignJar, dependsOn: jar) {

    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('alias')
    storePass = project.findProperty('storePass')
    keyPass = project.findProperty('keyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath

}

build.dependsOn signJar